{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2024-05-02T04:15:14.855Z",
    "end": "2024-05-02T04:15:17.070Z",
    "duration": 2215,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "66317f8a-ed67-416c-8d24-48d65a4af442",
      "title": "",
      "fullFile": "C:\\Users\\cahyo\\OneDrive\\Documents\\tugas3_api_automation_sanber\\tugas3_api_automation_sanber\\module\\test\\specs\\crudUser.module.js",
      "file": "\\module\\test\\specs\\crudUser.module.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "11e77081-3d33-448a-8f85-9a1ada2e4233",
          "title": "Tugas API Automation - Crud Kasir Aja",
          "fullFile": "C:\\Users\\cahyo\\OneDrive\\Documents\\tugas3_api_automation_sanber\\tugas3_api_automation_sanber\\module\\test\\specs\\crudUser.module.js",
          "file": "\\module\\test\\specs\\crudUser.module.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get Token Authentications",
              "fullTitle": "Tugas API Automation - Crud Kasir Aja Get Token Authentications",
              "timedOut": false,
              "duration": 828,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = { //set payload\n    email: 'sample@ex.com',\n    password: '123adsfadf@'\n}\n //send request   \n const response = await request(baseURL) //base url\n    .post('/authentications') //endpoint\n    .send(payload) //kirim payload\n    //Assertion pake chai\n   expect((await response).status).to.equal(201) //cek status response\n   accessToken = (await response).body.data.accessToken; //ambil value accessToken\n   console.log(accessToken); //tampilkan accessToken",
              "err": {},
              "uuid": "4ac48d22-e482-430a-8777-4053a629663b",
              "parentUUID": "11e77081-3d33-448a-8f85-9a1ada2e4233",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create user",
              "fullTitle": "Tugas API Automation - Crud Kasir Aja Create user",
              "timedOut": false,
              "duration": 490,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const createUser = {  // set data user\n    name: 'Cahyo Eko',\n    email: 'tugas@sanbercode.com',\n    password: 'jiasda2321@'\n}\n//send request\nconst response = await request(baseURL) //base url\n    .post('/users') //endpoint\n    .send(createUser) //kirim data user\n    .set('Authorization', `Bearer ${accessToken}`) //header\n//Assertion pake chai\nexpect((await response).status).to.equal(201); //cek status response\nuserId = response.body.data.userId; //ambil userId nya\nconsole.log((await response).body); //tampilkan response body",
              "err": {},
              "uuid": "365431fa-644c-4def-b55f-bed3bd1076b7",
              "parentUUID": "11e77081-3d33-448a-8f85-9a1ada2e4233",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Users Detail",
              "fullTitle": "Tugas API Automation - Crud Kasir Aja Get Users Detail",
              "timedOut": false,
              "duration": 140,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//send request\nconst response = await request(baseURL) //base url\n.get(`/users/${userId}`) //endpoint\n.set('Authorization', `Bearer ${accessToken}`) //header\n    \n       //Assertion pake chai\n       expect((await response).status).to.equal(200);//cek status response\n       console.log((await response).body); //tampilkan response body",
              "err": {},
              "uuid": "2a8541f4-553d-4a55-8aa3-2a3f987608f7",
              "parentUUID": "11e77081-3d33-448a-8f85-9a1ada2e4233",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Users List",
              "fullTitle": "Tugas API Automation - Crud Kasir Aja Get Users List",
              "timedOut": false,
              "duration": 189,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//send request\nconst response = await request(baseURL)//base url\n.get('/users') //endpoint\n.set('Authorization', `Bearer ${accessToken}`) //header\n    \n       //Assertion pake chai\n       expect((await response).status).to.equal(200); //cek status response\n       users = response.body.data.users; //ambil value user\n       console.log(users);// tampilkan response user",
              "err": {},
              "uuid": "d8b01043-20bb-4937-a8a0-eccc8d7a8d78",
              "parentUUID": "11e77081-3d33-448a-8f85-9a1ada2e4233",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update User",
              "fullTitle": "Tugas API Automation - Crud Kasir Aja Update User",
              "timedOut": false,
              "duration": 435,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const updatedUser = {  //set perubahan data\n    name: 'Cahyo Eko-Tugas API Automation-Kasir Aja',\n    email: 'Tugas3@sanbercode.com',\n    password: 'jiasda2321@'\n}\n\n//send request\nconst response = await request(baseURL) //base url\n    .put(`/users/${userId}`) //endpoint\n    .send(updatedUser) //kirim data yg diubah\n    .set('Authorization', `Bearer ${accessToken}`) //header\n//Assertion pake chai\nexpect((await response).status).to.equal(200) //cek status response\nconsole.log((await response).body); //tampilkan response body",
              "err": {},
              "uuid": "15631f15-01d9-4f44-9ab1-7c02ab200b4d",
              "parentUUID": "11e77081-3d33-448a-8f85-9a1ada2e4233",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete User",
              "fullTitle": "Tugas API Automation - Crud Kasir Aja Delete User",
              "timedOut": false,
              "duration": 117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//send request\nconst response = await request(baseURL) //base url\n    .delete(`/users/${userId}`) //endpoint\n    .set('Authorization', `Bearer ${accessToken}`) //header\n//Assertion pake chai\nexpect((await response).status).to.equal(200) //cek status response\nconsole.log((await response).body) //tampilkan response body",
              "err": {},
              "uuid": "cc00f844-d3f9-468f-9462-fdd983bcde2e",
              "parentUUID": "11e77081-3d33-448a-8f85-9a1ada2e4233",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4ac48d22-e482-430a-8777-4053a629663b",
            "365431fa-644c-4def-b55f-bed3bd1076b7",
            "2a8541f4-553d-4a55-8aa3-2a3f987608f7",
            "d8b01043-20bb-4937-a8a0-eccc8d7a8d78",
            "15631f15-01d9-4f44-9ab1-7c02ab200b4d",
            "cc00f844-d3f9-468f-9462-fdd983bcde2e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2199,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}